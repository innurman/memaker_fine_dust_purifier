#include <Wire.h>  
#include <SPI.h>
#include <SoftwareSerial.h>
#include "U8glib.h"



SoftwareSerial mySerial(2,7); // Arudino Uno port RX, TX


// setup u8g object, please remove comment from one of the following constructor calls
// IMPORTANT NOTE: The following list is incomplete. The complete list of supported 
// devices with all constructor calls is here: https://github.com/olikraus/u8glib/wiki/device
U8GLIB_SH1106_128X64 u8g(13, 11, 10, 9, 8);  // D0=13, D1=11, CS=10, DC=9, Reset=8

////////////////////////////OLED variables start/////////////////////////////////////////////
int initialCount=1;
int frameControl=0;

const unsigned char PROGMEM asset01[] = {
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x01, 0xFF, 0xFF, 0xFF, 0xFF, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x07, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x0E, 0x00, 0x00, 0x00, 0x00, 0x03, 0x80, 0x00, 0x00, 0x00, 0x00, 0x20, 0x28, 0x42, 0x00, 0x80,
0x1C, 0x00, 0x00, 0x00, 0x00, 0x01, 0xC0, 0x00, 0x00, 0x00, 0x1F, 0x27, 0xA8, 0xA2, 0x3C, 0x80,
0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE0, 0x00, 0x00, 0x00, 0x11, 0x24, 0xA9, 0x12, 0x04, 0x80,
0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x70, 0x00, 0x00, 0x00, 0x11, 0x24, 0xE9, 0x12, 0x78, 0x80,
0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x00, 0x11, 0x24, 0xA9, 0x12, 0x0B, 0x80,
0x10, 0x00, 0x00, 0x00, 0x00, 0x03, 0xBC, 0x00, 0x00, 0x00, 0x11, 0x24, 0xA9, 0x12, 0x10, 0x80,
0x10, 0x07, 0xFF, 0xFF, 0xFF, 0xFF, 0xFE, 0x00, 0x00, 0x00, 0x11, 0x24, 0xA9, 0x22, 0x20, 0x80,
0x10, 0x0E, 0x00, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x0E, 0x23, 0x28, 0xC2, 0x40, 0x80,
0x10, 0x18, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x20, 0x28, 0x02, 0x00, 0x80,
0x10, 0x18, 0x00, 0x00, 0x78, 0x00, 0x01, 0x80, 0x00, 0x00, 0x00, 0x20, 0x08, 0x02, 0x00, 0x80,
0x10, 0x10, 0x00, 0x03, 0xFE, 0x00, 0x01, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x10, 0x10, 0x00, 0x07, 0x07, 0x00, 0x01, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x10, 0x10, 0x00, 0x1C, 0x01, 0x80, 0x78, 0x00, 0x00, 0x00, 0x00, 0x20, 0x28, 0xE2, 0x00, 0x80,
0x10, 0x10, 0x00, 0x18, 0x00, 0x83, 0xFF, 0x00, 0x00, 0x00, 0x1F, 0x21, 0x29, 0x12, 0x7E, 0x80,
0x10, 0x10, 0x00, 0x30, 0x00, 0x1F, 0x03, 0xC0, 0x00, 0x00, 0x11, 0x21, 0x29, 0x1E, 0x10, 0x80,
0x10, 0x10, 0x00, 0x30, 0x03, 0xFC, 0x00, 0xF0, 0x00, 0x00, 0x11, 0x21, 0x69, 0x12, 0x10, 0x80,
0x10, 0x10, 0x00, 0x20, 0x03, 0xE0, 0x00, 0x3E, 0x00, 0x00, 0x11, 0x23, 0x29, 0xF2, 0x10, 0x80,
0x10, 0x10, 0x00, 0x20, 0x00, 0x00, 0x00, 0x0F, 0xE0, 0x00, 0x11, 0x23, 0x28, 0x02, 0x28, 0x80,
0x10, 0x10, 0x00, 0x20, 0x06, 0x00, 0x01, 0x80, 0x40, 0x00, 0x11, 0x24, 0xA8, 0x82, 0x24, 0x80,
0x10, 0x10, 0x00, 0x30, 0x0E, 0x00, 0x01, 0x80, 0x00, 0x00, 0x0E, 0x28, 0x68, 0x80, 0x42, 0x80,
0x10, 0x10, 0x00, 0x30, 0x0C, 0x3F, 0x01, 0x80, 0x00, 0x00, 0x00, 0x20, 0x28, 0xFE, 0x00, 0x80,
0x10, 0x10, 0x3E, 0x18, 0x18, 0xFF, 0xC1, 0x80, 0x00, 0x00, 0x00, 0x20, 0x08, 0x00, 0x00, 0x80,
0x10, 0x10, 0x7F, 0x1C, 0x19, 0xC0, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x10, 0x10, 0xC1, 0x8E, 0x33, 0x80, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x10, 0x10, 0xC0, 0xC7, 0x3E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xFE, 0x00, 0x80, 0x00,
0x10, 0x11, 0x80, 0xF3, 0xFC, 0x00, 0x1F, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x02, 0x7C, 0x80, 0x00,
0x10, 0x11, 0x80, 0x3F, 0xF8, 0x00, 0xF8, 0x7C, 0x00, 0x00, 0x00, 0x00, 0x22, 0x04, 0x80, 0x00,
0x10, 0x11, 0x80, 0x0F, 0x8C, 0x07, 0xC0, 0x0E, 0x00, 0x00, 0x00, 0x00, 0x24, 0x08, 0x80, 0x00,
0x10, 0x11, 0x80, 0x03, 0x8C, 0x3F, 0x08, 0x07, 0x80, 0x00, 0x00, 0x03, 0xFF, 0x08, 0x80, 0x00,
0x10, 0x11, 0x80, 0x01, 0x9F, 0x00, 0x19, 0x81, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x10, 0x80, 0x00,
0x10, 0x11, 0x80, 0x01, 0xFD, 0xC0, 0x19, 0x80, 0x3C, 0x00, 0x00, 0x00, 0xFC, 0x20, 0x80, 0x00,
0x10, 0x10, 0xC0, 0x03, 0xEC, 0x70, 0x19, 0x80, 0x00, 0x00, 0x00, 0x01, 0x02, 0x40, 0x80, 0x00,
0x10, 0x10, 0xE0, 0x06, 0xC6, 0x18, 0x19, 0x80, 0x00, 0x00, 0x00, 0x01, 0x02, 0x00, 0x80, 0x00,
0x10, 0x10, 0x70, 0x1C, 0xC3, 0x1C, 0x71, 0x80, 0x00, 0x00, 0x00, 0x00, 0xFC, 0x00, 0x80, 0x00,
0x10, 0x10, 0x38, 0x39, 0x81, 0x8F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x10, 0x10, 0x1F, 0xF1, 0x80, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x10, 0x10, 0x07, 0xC3, 0x80, 0xC0, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xE2, 0x06, 0xC8, 0x00, 0x20,
0x10, 0x10, 0x00, 0x07, 0x00, 0x07, 0xFF, 0xE0, 0x00, 0x00, 0x01, 0xF2, 0x01, 0x08, 0x1F, 0x20,
0x10, 0x10, 0x00, 0x0E, 0x00, 0x1F, 0x00, 0x78, 0x00, 0x00, 0x00, 0x42, 0x01, 0x38, 0x01, 0x20,
0x18, 0x10, 0x00, 0x18, 0x01, 0xF8, 0x00, 0x1E, 0x00, 0x00, 0x00, 0x6E, 0x01, 0x88, 0x02, 0x20,
0x1C, 0x10, 0x00, 0x18, 0x01, 0x40, 0x00, 0x07, 0xF0, 0x00, 0x01, 0x9A, 0x06, 0x68, 0x02, 0x20,
0x0C, 0x10, 0x00, 0x18, 0x00, 0x40, 0x01, 0x81, 0xF0, 0x00, 0x02, 0x02, 0x00, 0x08, 0x04, 0x20,
0x07, 0x10, 0x00, 0x18, 0x00, 0xC0, 0x01, 0x80, 0x00, 0x00, 0x00, 0x7C, 0x01, 0xF0, 0x08, 0x20,
0x03, 0x10, 0x00, 0x18, 0x01, 0x80, 0x01, 0x80, 0x00, 0x00, 0x00, 0x82, 0x02, 0x08, 0x10, 0x20,
0x01, 0x90, 0x00, 0x1C, 0x07, 0x80, 0x01, 0x80, 0x00, 0x00, 0x00, 0x82, 0x02, 0x08, 0x00, 0x20,
0x00, 0xF0, 0x00, 0x0F, 0x1E, 0x00, 0x01, 0x80, 0x00, 0x00, 0x00, 0x7C, 0x01, 0xF0, 0x00, 0x20,
0x00, 0x70, 0x00, 0x07, 0xFC, 0x00, 0x01, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x30, 0x00, 0x00, 0x00, 0x00, 0x01, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x18, 0x00, 0x00, 0x00, 0x00, 0x03, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x1C, 0x00, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x07, 0xFF, 0xFF, 0xFF, 0xFF, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x03, 0xFF, 0xFF, 0xFF, 0xFF, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};
const unsigned char PROGMEM asset02[] = {
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x01, 0xFF, 0xFF, 0xFF, 0xFF, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x07, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x0E, 0x00, 0x00, 0x00, 0x00, 0x03, 0x80, 0x00, 0x00, 0x00, 0x00, 0x20, 0x28, 0x42, 0x00, 0x80,
0x1C, 0x00, 0x00, 0x00, 0x00, 0x01, 0xC0, 0x00, 0x00, 0x00, 0x1F, 0x27, 0xA8, 0xA2, 0x3C, 0x80,
0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE0, 0x00, 0x00, 0x00, 0x11, 0x24, 0xA9, 0x12, 0x04, 0x80,
0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x70, 0x00, 0x00, 0x00, 0x11, 0x24, 0xE9, 0x12, 0x78, 0x80,
0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x00, 0x11, 0x24, 0xA9, 0x12, 0x0B, 0x80,
0x10, 0x00, 0x00, 0x00, 0x00, 0x03, 0xBC, 0x00, 0x00, 0x00, 0x11, 0x24, 0xA9, 0x12, 0x10, 0x80,
0x10, 0x07, 0xFF, 0xFF, 0xFF, 0xFF, 0xFE, 0x00, 0x00, 0x00, 0x11, 0x24, 0xA9, 0x22, 0x20, 0x80,
0x10, 0x0E, 0x00, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x0E, 0x23, 0x28, 0xC2, 0x40, 0x80,
0x10, 0x18, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x20, 0x28, 0x02, 0x00, 0x80,
0x10, 0x18, 0x00, 0x00, 0x80, 0x00, 0x01, 0x80, 0xF0, 0x00, 0x00, 0x20, 0x08, 0x02, 0x00, 0x80,
0x10, 0x10, 0x00, 0x0F, 0xF0, 0x00, 0x01, 0x87, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x10, 0x10, 0x00, 0x3E, 0x39, 0xF0, 0x01, 0x1E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x10, 0x10, 0x00, 0x70, 0x18, 0xFE, 0x00, 0x78, 0x00, 0x00, 0x00, 0x20, 0x28, 0xE2, 0x00, 0x80,
0x10, 0x10, 0x00, 0xE0, 0x0C, 0x07, 0xC1, 0xE0, 0x00, 0x00, 0x1F, 0x21, 0x29, 0x12, 0x7E, 0x80,
0x10, 0x10, 0x00, 0xC0, 0x0C, 0x01, 0xFF, 0x80, 0x00, 0x00, 0x11, 0x21, 0x29, 0x1E, 0x10, 0x80,
0x10, 0x10, 0x01, 0x80, 0x0C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x11, 0x21, 0x69, 0x12, 0x10, 0x80,
0x10, 0x10, 0x01, 0x80, 0x0C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x11, 0x23, 0x29, 0xF2, 0x10, 0x80,
0x10, 0x10, 0x01, 0x80, 0x18, 0x3E, 0x00, 0x00, 0x00, 0x00, 0x11, 0x23, 0x28, 0x02, 0x28, 0x80,
0x10, 0x10, 0x01, 0x80, 0x38, 0xFF, 0x81, 0x80, 0x00, 0x00, 0x11, 0x24, 0xA8, 0x82, 0x24, 0x80,
0x10, 0x10, 0x01, 0x80, 0x31, 0xC1, 0xC1, 0x80, 0x00, 0x00, 0x0E, 0x28, 0x68, 0x80, 0x42, 0x80,
0x10, 0x10, 0x01, 0x80, 0x23, 0x00, 0x61, 0x80, 0x18, 0x00, 0x00, 0x20, 0x28, 0xFE, 0x00, 0x80,
0x10, 0x10, 0x00, 0xC0, 0x67, 0x00, 0x31, 0x80, 0xFC, 0x00, 0x00, 0x20, 0x08, 0x00, 0x00, 0x80,
0x10, 0x10, 0x00, 0xE0, 0x66, 0x3E, 0x10, 0x03, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x10, 0x10, 0x00, 0x70, 0x6C, 0x3F, 0xC0, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x10, 0x10, 0x08, 0x38, 0x7C, 0x01, 0xF0, 0x7C, 0x00, 0x00, 0x00, 0x01, 0xFE, 0x00, 0x80, 0x00,
0x10, 0x10, 0x3F, 0x0E, 0xF8, 0x00, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x02, 0x7C, 0x80, 0x00,
0x10, 0x10, 0xE3, 0x87, 0xF8, 0x00, 0x07, 0x80, 0x00, 0x00, 0x00, 0x00, 0x22, 0x04, 0x80, 0x00,
0x10, 0x10, 0xC1, 0xFF, 0x8F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x24, 0x08, 0x80, 0x00,
0x10, 0x11, 0x80, 0x7F, 0x8F, 0xF0, 0x18, 0x00, 0x00, 0x00, 0x00, 0x03, 0xFF, 0x08, 0x80, 0x00,
0x10, 0x11, 0x80, 0x01, 0x9E, 0x38, 0x39, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x80, 0x00,
0x10, 0x11, 0x80, 0x00, 0xFE, 0x0F, 0xF1, 0x80, 0x00, 0x00, 0x00, 0x00, 0xFC, 0x20, 0x80, 0x00,
0x10, 0x11, 0x80, 0x01, 0xF3, 0x87, 0xE1, 0x80, 0x00, 0x00, 0x00, 0x01, 0x02, 0x40, 0x80, 0x00,
0x10, 0x11, 0x80, 0x01, 0xE0, 0xE0, 0x01, 0x80, 0x00, 0x00, 0x00, 0x01, 0x02, 0x00, 0x80, 0x00,
0x10, 0x10, 0xC0, 0x03, 0x20, 0x00, 0x01, 0x87, 0xE0, 0x00, 0x00, 0x00, 0xFC, 0x00, 0x80, 0x00,
0x10, 0x10, 0xC0, 0x07, 0x63, 0xC0, 0x00, 0x1F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x10, 0x10, 0x60, 0x06, 0x63, 0xF8, 0x00, 0x78, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x10, 0x10, 0x30, 0x0C, 0x60, 0x3E, 0x01, 0xE0, 0x00, 0x00, 0x00, 0xE2, 0x06, 0xC8, 0x00, 0x20,
0x10, 0x10, 0x3C, 0x38, 0xE0, 0x07, 0xFF, 0x80, 0x00, 0x00, 0x01, 0xF2, 0x01, 0x08, 0x1F, 0x20,
0x10, 0x10, 0x0F, 0xF1, 0xC0, 0x00, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x42, 0x01, 0x38, 0x01, 0x20,
0x18, 0x10, 0x01, 0x81, 0x80, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x6E, 0x01, 0x88, 0x02, 0x20,
0x1C, 0x10, 0x00, 0x03, 0x00, 0x18, 0x00, 0x00, 0x00, 0x00, 0x01, 0x9A, 0x06, 0x68, 0x02, 0x20,
0x0C, 0x10, 0x00, 0x03, 0x00, 0x18, 0x01, 0x80, 0x00, 0x00, 0x02, 0x02, 0x00, 0x08, 0x04, 0x20,
0x07, 0x10, 0x00, 0x03, 0x00, 0x30, 0x01, 0x80, 0x00, 0x00, 0x00, 0x7C, 0x01, 0xF0, 0x08, 0x20,
0x03, 0x10, 0x00, 0x01, 0x80, 0x70, 0x01, 0x80, 0x00, 0x00, 0x00, 0x82, 0x02, 0x08, 0x10, 0x20,
0x01, 0x90, 0x00, 0x01, 0x80, 0xE0, 0x01, 0x80, 0x00, 0x00, 0x00, 0x82, 0x02, 0x08, 0x00, 0x20,
0x00, 0xF0, 0x00, 0x00, 0xFF, 0xC0, 0x01, 0x80, 0x00, 0x00, 0x00, 0x7C, 0x01, 0xF0, 0x00, 0x20,
0x00, 0x70, 0x00, 0x00, 0x7F, 0x00, 0x01, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x30, 0x00, 0x00, 0x00, 0x00, 0x01, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x18, 0x00, 0x00, 0x00, 0x00, 0x03, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x1C, 0x00, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x07, 0xFF, 0xFF, 0xFF, 0xFF, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x03, 0xFF, 0xFF, 0xFF, 0xFF, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};
const unsigned char PROGMEM asset03[] = {
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x01, 0xFF, 0xFF, 0xFF, 0xFF, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x07, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x0E, 0x00, 0x00, 0x00, 0x00, 0x03, 0x80, 0x00, 0x00, 0x00, 0x00, 0x20, 0x28, 0x42, 0x00, 0x80,
0x1C, 0x00, 0x00, 0x00, 0x00, 0x01, 0xC0, 0x00, 0x00, 0x00, 0x1F, 0x27, 0xA8, 0xA2, 0x3C, 0x80,
0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE0, 0x00, 0x00, 0x00, 0x11, 0x24, 0xA9, 0x12, 0x04, 0x80,
0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x70, 0x00, 0x00, 0x00, 0x11, 0x24, 0xE9, 0x12, 0x78, 0x80,
0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x00, 0x11, 0x24, 0xA9, 0x12, 0x0B, 0x80,
0x10, 0x00, 0x00, 0x00, 0x00, 0x03, 0xBC, 0x00, 0x00, 0x00, 0x11, 0x24, 0xA9, 0x12, 0x10, 0x80,
0x10, 0x07, 0xFF, 0xFF, 0xFF, 0xFF, 0xFE, 0x00, 0x00, 0x00, 0x11, 0x24, 0xA9, 0x22, 0x20, 0x80,
0x10, 0x0E, 0x00, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x0E, 0x23, 0x28, 0xC2, 0x40, 0x80,
0x10, 0x18, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x20, 0x28, 0x02, 0x00, 0x80,
0x10, 0x18, 0x00, 0x00, 0x00, 0x00, 0x01, 0x80, 0x00, 0x00, 0x00, 0x20, 0x08, 0x02, 0x00, 0x80,
0x10, 0x10, 0x00, 0x0E, 0x00, 0x00, 0x01, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x10, 0x10, 0x00, 0x3F, 0x80, 0x00, 0x01, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x10, 0x10, 0x00, 0xE1, 0xC0, 0x00, 0x78, 0x00, 0x00, 0x00, 0x00, 0x20, 0x28, 0xE2, 0x00, 0x80,
0x10, 0x10, 0x01, 0xC0, 0xC0, 0x03, 0xFF, 0x00, 0x00, 0x00, 0x1F, 0x21, 0x29, 0x12, 0x7E, 0x80,
0x10, 0x10, 0x03, 0x00, 0x60, 0x1F, 0x03, 0xC0, 0x00, 0x00, 0x11, 0x21, 0x29, 0x1E, 0x10, 0x80,
0x10, 0x10, 0x07, 0x00, 0x63, 0xFC, 0x00, 0xF0, 0x00, 0x00, 0x11, 0x21, 0x69, 0x12, 0x10, 0x80,
0x10, 0x10, 0x06, 0x00, 0x63, 0xE1, 0x80, 0x3E, 0x00, 0x00, 0x11, 0x23, 0x29, 0xF2, 0x10, 0x80,
0x10, 0x10, 0x06, 0x00, 0xC0, 0x01, 0xC0, 0x0F, 0xE0, 0x00, 0x11, 0x23, 0x28, 0x02, 0x28, 0x80,
0x10, 0x10, 0x04, 0x00, 0xCC, 0x00, 0xE1, 0x80, 0x40, 0x00, 0x11, 0x24, 0xA8, 0x82, 0x24, 0x80,
0x10, 0x10, 0x0C, 0x00, 0x8C, 0x00, 0x61, 0x80, 0x00, 0x00, 0x0E, 0x28, 0x68, 0x80, 0x42, 0x80,
0x10, 0x10, 0x0C, 0x00, 0x8C, 0x00, 0x31, 0x80, 0x00, 0x00, 0x00, 0x20, 0x28, 0xFE, 0x00, 0x80,
0x10, 0x10, 0x06, 0x00, 0xD8, 0x00, 0x31, 0x80, 0x00, 0x00, 0x00, 0x20, 0x08, 0x00, 0x00, 0x80,
0x10, 0x10, 0x06, 0x00, 0xD8, 0x00, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x10, 0x10, 0x03, 0x00, 0xD8, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x10, 0x10, 0x03, 0x80, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xFE, 0x00, 0x80, 0x00,
0x10, 0x10, 0x01, 0xF0, 0xF0, 0x00, 0x1F, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x02, 0x7C, 0x80, 0x00,
0x10, 0x10, 0x00, 0x7D, 0xFF, 0x80, 0xF8, 0x7C, 0x00, 0x00, 0x00, 0x00, 0x22, 0x04, 0x80, 0x00,
0x10, 0x10, 0x00, 0x0F, 0x8F, 0x07, 0xC0, 0x0E, 0x00, 0x00, 0x00, 0x00, 0x24, 0x08, 0x80, 0x00,
0x10, 0x10, 0x1F, 0x07, 0x8E, 0x3F, 0x00, 0x07, 0x80, 0x00, 0x00, 0x03, 0xFF, 0x08, 0x80, 0x00,
0x10, 0x10, 0x3F, 0xFF, 0x9F, 0x80, 0x01, 0x81, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x10, 0x80, 0x00,
0x10, 0x10, 0x60, 0xFC, 0xF9, 0xC0, 0x01, 0x80, 0x3C, 0x00, 0x00, 0x00, 0xFC, 0x20, 0x80, 0x00,
0x10, 0x10, 0xE0, 0x00, 0x70, 0x78, 0x01, 0x80, 0x00, 0x00, 0x00, 0x01, 0x02, 0x40, 0x80, 0x00,
0x10, 0x10, 0xC0, 0x00, 0xF0, 0x0C, 0x01, 0x80, 0x00, 0x00, 0x00, 0x01, 0x02, 0x00, 0x80, 0x00,
0x10, 0x10, 0xC0, 0x00, 0xD8, 0x06, 0x01, 0x80, 0x00, 0x00, 0x00, 0x00, 0xFC, 0x00, 0x80, 0x00,
0x10, 0x10, 0xC0, 0x00, 0xD8, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x10, 0x10, 0x40, 0x01, 0x98, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x10, 0x10, 0x60, 0x01, 0x98, 0x00, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xE2, 0x06, 0xC8, 0x00, 0x20,
0x10, 0x10, 0x70, 0x03, 0x98, 0x07, 0xFF, 0xE0, 0x00, 0x00, 0x01, 0xF2, 0x01, 0x08, 0x1F, 0x20,
0x10, 0x10, 0x38, 0x03, 0x38, 0x1F, 0x00, 0x78, 0x00, 0x00, 0x00, 0x42, 0x01, 0x38, 0x01, 0x20,
0x18, 0x10, 0x1C, 0x0E, 0x31, 0xF8, 0x00, 0x1E, 0x00, 0x00, 0x00, 0x6E, 0x01, 0x88, 0x02, 0x20,
0x1C, 0x10, 0x0F, 0xFC, 0x31, 0x00, 0x00, 0x07, 0xF0, 0x00, 0x01, 0x9A, 0x06, 0x68, 0x02, 0x20,
0x0C, 0x10, 0x03, 0xF0, 0x30, 0x06, 0x01, 0x81, 0xF0, 0x00, 0x02, 0x02, 0x00, 0x08, 0x04, 0x20,
0x07, 0x10, 0x00, 0x00, 0x30, 0x0C, 0x01, 0x80, 0x00, 0x00, 0x00, 0x7C, 0x01, 0xF0, 0x08, 0x20,
0x03, 0x10, 0x00, 0x00, 0x18, 0x18, 0x01, 0x80, 0x00, 0x00, 0x00, 0x82, 0x02, 0x08, 0x10, 0x20,
0x01, 0x90, 0x00, 0x00, 0x1E, 0xF0, 0x01, 0x80, 0x00, 0x00, 0x00, 0x82, 0x02, 0x08, 0x00, 0x20,
0x00, 0xF0, 0x00, 0x00, 0x0F, 0xE0, 0x01, 0x80, 0x00, 0x00, 0x00, 0x7C, 0x01, 0xF0, 0x00, 0x20,
0x00, 0x70, 0x00, 0x00, 0x00, 0x00, 0x01, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x30, 0x00, 0x00, 0x00, 0x00, 0x01, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x18, 0x00, 0x00, 0x00, 0x00, 0x03, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x1C, 0x00, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x07, 0xFF, 0xFF, 0xFF, 0xFF, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x03, 0xFF, 0xFF, 0xFF, 0xFF, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};
const unsigned char PROGMEM asset04[] = {
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x01, 0xFF, 0xFF, 0xFF, 0xFF, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x07, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x0E, 0x00, 0x00, 0x00, 0x00, 0x03, 0x80, 0x00, 0x00, 0x00, 0x00, 0x20, 0x28, 0x42, 0x00, 0x80,
0x1C, 0x00, 0x00, 0x00, 0x00, 0x01, 0xC0, 0x00, 0x00, 0x00, 0x1F, 0x27, 0xA8, 0xA2, 0x3C, 0x80,
0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE0, 0x00, 0x00, 0x00, 0x11, 0x24, 0xA9, 0x12, 0x04, 0x80,
0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x70, 0x00, 0x00, 0x00, 0x11, 0x24, 0xE9, 0x12, 0x78, 0x80,
0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x00, 0x11, 0x24, 0xA9, 0x12, 0x0B, 0x80,
0x10, 0x00, 0x00, 0x00, 0x00, 0x03, 0xBC, 0x00, 0x00, 0x00, 0x11, 0x24, 0xA9, 0x12, 0x10, 0x80,
0x10, 0x07, 0xFF, 0xFF, 0xFF, 0xFF, 0xFE, 0x00, 0x00, 0x00, 0x11, 0x24, 0xA9, 0x22, 0x20, 0x80,
0x10, 0x0E, 0x00, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x0E, 0x23, 0x28, 0xC2, 0x40, 0x80,
0x10, 0x18, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x20, 0x28, 0x02, 0x00, 0x80,
0x10, 0x18, 0x00, 0x00, 0x00, 0x00, 0x01, 0x80, 0xF0, 0x00, 0x00, 0x20, 0x08, 0x02, 0x00, 0x80,
0x10, 0x10, 0x00, 0x00, 0x00, 0x00, 0x01, 0x87, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x10, 0x10, 0x00, 0x00, 0x01, 0xF0, 0x01, 0x1E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x10, 0x10, 0x00, 0xF0, 0x00, 0x7E, 0x00, 0x78, 0x00, 0x00, 0x00, 0x20, 0x28, 0xE2, 0x00, 0x80,
0x10, 0x10, 0x01, 0xFC, 0x00, 0x07, 0xC1, 0xE0, 0x00, 0x00, 0x1F, 0x21, 0x29, 0x12, 0x7E, 0x80,
0x10, 0x10, 0x07, 0x06, 0x0F, 0x81, 0xFF, 0x80, 0x00, 0x00, 0x11, 0x21, 0x29, 0x1E, 0x10, 0x80,
0x10, 0x10, 0x0E, 0x06, 0x1C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x11, 0x21, 0x69, 0x12, 0x10, 0x80,
0x10, 0x10, 0x0C, 0x03, 0x18, 0x01, 0x80, 0x00, 0x00, 0x00, 0x11, 0x23, 0x29, 0xF2, 0x10, 0x80,
0x10, 0x10, 0x18, 0x03, 0x30, 0x00, 0xC0, 0x00, 0x00, 0x00, 0x11, 0x23, 0x28, 0x02, 0x28, 0x80,
0x10, 0x10, 0x18, 0x03, 0x30, 0x00, 0x61, 0x80, 0x00, 0x00, 0x11, 0x24, 0xA8, 0x82, 0x24, 0x80,
0x10, 0x10, 0x18, 0x02, 0x30, 0x00, 0x61, 0x80, 0x00, 0x00, 0x0E, 0x28, 0x68, 0x80, 0x42, 0x80,
0x10, 0x10, 0x30, 0x02, 0x30, 0x00, 0x61, 0x80, 0x18, 0x00, 0x00, 0x20, 0x28, 0xFE, 0x00, 0x80,
0x10, 0x10, 0x30, 0x03, 0x20, 0x00, 0x61, 0x80, 0xFC, 0x00, 0x00, 0x20, 0x08, 0x00, 0x00, 0x80,
0x10, 0x10, 0x10, 0x03, 0x20, 0x3E, 0x00, 0x03, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x10, 0x10, 0x18, 0x01, 0xA0, 0x3F, 0x80, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x10, 0x10, 0x18, 0x01, 0xE1, 0x01, 0xF0, 0x7C, 0x00, 0x00, 0x00, 0x01, 0xFE, 0x00, 0x80, 0x00,
0x10, 0x10, 0x0C, 0x00, 0xFB, 0x80, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x02, 0x7C, 0x80, 0x00,
0x10, 0x10, 0x06, 0x00, 0xDE, 0x00, 0x07, 0x80, 0x00, 0x00, 0x00, 0x00, 0x22, 0x04, 0x80, 0x00,
0x10, 0x10, 0x03, 0xFF, 0x8E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x24, 0x08, 0x80, 0x00,
0x10, 0x10, 0x01, 0xFF, 0x8F, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xFF, 0x08, 0x80, 0x00,
0x10, 0x10, 0x00, 0x03, 0x9C, 0x7F, 0x01, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x80, 0x00,
0x10, 0x10, 0x00, 0x07, 0xF8, 0x03, 0x01, 0x80, 0x00, 0x00, 0x00, 0x00, 0xFC, 0x20, 0x80, 0x00,
0x10, 0x10, 0x07, 0xFE, 0x78, 0x01, 0x81, 0x80, 0x00, 0x00, 0x00, 0x01, 0x02, 0x40, 0x80, 0x00,
0x10, 0x10, 0x0F, 0xF8, 0x3C, 0x00, 0xC1, 0x80, 0x00, 0x00, 0x00, 0x01, 0x02, 0x00, 0x80, 0x00,
0x10, 0x10, 0x18, 0x00, 0x20, 0x00, 0xC1, 0x87, 0xE0, 0x00, 0x00, 0x00, 0xFC, 0x00, 0x80, 0x00,
0x10, 0x10, 0x30, 0x00, 0x23, 0xC0, 0x40, 0x1F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x10, 0x10, 0x30, 0x00, 0x63, 0xF8, 0x40, 0x78, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x10, 0x10, 0x30, 0x00, 0x60, 0x3E, 0x01, 0xE0, 0x00, 0x00, 0x00, 0xE2, 0x06, 0xC8, 0x00, 0x20,
0x10, 0x10, 0x30, 0x00, 0x66, 0x07, 0xFF, 0x80, 0x00, 0x00, 0x01, 0xF2, 0x01, 0x08, 0x1F, 0x20,
0x10, 0x10, 0x38, 0x00, 0x66, 0x00, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x42, 0x01, 0x38, 0x01, 0x20,
0x18, 0x10, 0x18, 0x00, 0x66, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x6E, 0x01, 0x88, 0x02, 0x20,
0x1C, 0x10, 0x0C, 0x00, 0xC6, 0x01, 0x80, 0x00, 0x00, 0x00, 0x01, 0x9A, 0x06, 0x68, 0x02, 0x20,
0x0C, 0x10, 0x07, 0x01, 0x83, 0x03, 0x01, 0x80, 0x00, 0x00, 0x02, 0x02, 0x00, 0x08, 0x04, 0x20,
0x07, 0x10, 0x03, 0xFF, 0x03, 0x8E, 0x01, 0x80, 0x00, 0x00, 0x00, 0x7C, 0x01, 0xF0, 0x08, 0x20,
0x03, 0x10, 0x00, 0xFE, 0x01, 0xFC, 0x01, 0x80, 0x00, 0x00, 0x00, 0x82, 0x02, 0x08, 0x10, 0x20,
0x01, 0x90, 0x00, 0x00, 0x00, 0x70, 0x01, 0x80, 0x00, 0x00, 0x00, 0x82, 0x02, 0x08, 0x00, 0x20,
0x00, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x01, 0x80, 0x00, 0x00, 0x00, 0x7C, 0x01, 0xF0, 0x00, 0x20,
0x00, 0x70, 0x00, 0x00, 0x00, 0x00, 0x01, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x30, 0x00, 0x00, 0x00, 0x00, 0x01, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x18, 0x00, 0x00, 0x00, 0x00, 0x03, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x1C, 0x00, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x07, 0xFF, 0xFF, 0xFF, 0xFF, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x03, 0xFF, 0xFF, 0xFF, 0xFF, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};
const unsigned char PROGMEM asset05[] = {
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x01, 0xFF, 0xFF, 0xFF, 0xFF, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x07, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x0E, 0x00, 0x00, 0x00, 0x00, 0x03, 0x80, 0x00, 0x00, 0x00, 0x00, 0x20, 0x28, 0x42, 0x00, 0x80,
0x1C, 0x00, 0x00, 0x00, 0x00, 0x01, 0xC0, 0x00, 0x00, 0x00, 0x1F, 0x27, 0xA8, 0xA2, 0x3C, 0x80,
0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE0, 0x00, 0x00, 0x00, 0x11, 0x24, 0xA9, 0x12, 0x04, 0x80,
0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x70, 0x00, 0x00, 0x00, 0x11, 0x24, 0xE9, 0x12, 0x78, 0x80,
0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x00, 0x11, 0x24, 0xA9, 0x12, 0x0B, 0x80,
0x10, 0x00, 0x00, 0x00, 0x00, 0x03, 0xBC, 0x00, 0x00, 0x00, 0x11, 0x24, 0xA9, 0x12, 0x10, 0x80,
0x10, 0x07, 0xFF, 0xFF, 0xFF, 0xFF, 0xFE, 0x00, 0x00, 0x00, 0x11, 0x24, 0xA9, 0x22, 0x20, 0x80,
0x10, 0x0E, 0x00, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x0E, 0x23, 0x28, 0xC2, 0x40, 0x80,
0x10, 0x18, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x20, 0x28, 0x02, 0x00, 0x80,
0x10, 0x18, 0x00, 0x00, 0x00, 0x00, 0x01, 0x80, 0x00, 0x00, 0x00, 0x20, 0x08, 0x02, 0x00, 0x80,
0x10, 0x10, 0x00, 0x00, 0x00, 0x00, 0x01, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x10, 0x10, 0x00, 0x00, 0x07, 0xE0, 0x01, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x10, 0x10, 0x00, 0x00, 0x1F, 0xF0, 0x78, 0x00, 0x00, 0x00, 0x00, 0x20, 0x28, 0xE2, 0x00, 0x80,
0x10, 0x10, 0x00, 0x00, 0x38, 0x03, 0xFF, 0x00, 0x00, 0x00, 0x1F, 0x21, 0x29, 0x12, 0x7E, 0x80,
0x10, 0x10, 0x01, 0x00, 0x60, 0x1F, 0x03, 0xC0, 0x00, 0x00, 0x11, 0x21, 0x29, 0x1E, 0x10, 0x80,
0x10, 0x10, 0x07, 0xE0, 0xC3, 0xFC, 0x00, 0xF0, 0x00, 0x00, 0x11, 0x21, 0x69, 0x12, 0x10, 0x80,
0x10, 0x10, 0x0E, 0x70, 0xC3, 0xE1, 0x80, 0x3E, 0x00, 0x00, 0x11, 0x23, 0x29, 0xF2, 0x10, 0x80,
0x10, 0x10, 0x18, 0x18, 0x80, 0x01, 0x80, 0x0F, 0xE0, 0x00, 0x11, 0x23, 0x28, 0x02, 0x28, 0x80,
0x10, 0x10, 0x30, 0x18, 0x80, 0x01, 0x81, 0x80, 0x40, 0x00, 0x11, 0x24, 0xA8, 0x82, 0x24, 0x80,
0x10, 0x10, 0x30, 0x08, 0x80, 0x03, 0x01, 0x80, 0x00, 0x00, 0x0E, 0x28, 0x68, 0x80, 0x42, 0x80,
0x10, 0x10, 0x60, 0x08, 0xC0, 0x07, 0x01, 0x80, 0x00, 0x00, 0x00, 0x20, 0x28, 0xFE, 0x00, 0x80,
0x10, 0x10, 0x60, 0x0C, 0xC0, 0x3E, 0x01, 0x80, 0x00, 0x00, 0x00, 0x20, 0x08, 0x00, 0x00, 0x80,
0x10, 0x10, 0x60, 0x0C, 0xC0, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x10, 0x10, 0x60, 0x06, 0xC3, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x10, 0x10, 0x60, 0x03, 0xE7, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xFE, 0x00, 0x80, 0x00,
0x10, 0x10, 0x60, 0x01, 0xFE, 0x18, 0x3F, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x02, 0x7C, 0x80, 0x00,
0x10, 0x10, 0x30, 0x01, 0xFF, 0x80, 0xF8, 0x7C, 0x00, 0x00, 0x00, 0x00, 0x22, 0x04, 0x80, 0x00,
0x10, 0x10, 0x30, 0x01, 0x8F, 0x07, 0xC0, 0x0E, 0x00, 0x00, 0x00, 0x00, 0x24, 0x08, 0x80, 0x00,
0x10, 0x10, 0x18, 0x01, 0x8C, 0x3F, 0x00, 0x07, 0x80, 0x00, 0x00, 0x03, 0xFF, 0x08, 0x80, 0x00,
0x10, 0x10, 0x0F, 0x3F, 0xCC, 0x30, 0x21, 0x81, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x10, 0x80, 0x00,
0x10, 0x10, 0x07, 0xFF, 0xFC, 0x00, 0x31, 0x80, 0x3C, 0x00, 0x00, 0x00, 0xFC, 0x20, 0x80, 0x00,
0x10, 0x10, 0x00, 0x43, 0xBE, 0x00, 0x31, 0x80, 0x00, 0x00, 0x00, 0x01, 0x02, 0x40, 0x80, 0x00,
0x10, 0x10, 0x00, 0x07, 0x1B, 0x00, 0x31, 0x80, 0x00, 0x00, 0x00, 0x01, 0x02, 0x00, 0x80, 0x00,
0x10, 0x10, 0x00, 0x1E, 0x1B, 0x80, 0x31, 0x80, 0x00, 0x00, 0x00, 0x00, 0xFC, 0x00, 0x80, 0x00,
0x10, 0x10, 0x01, 0xF8, 0x19, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x10, 0x10, 0x03, 0x80, 0x08, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x10, 0x10, 0x07, 0x00, 0x0C, 0xC0, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xE2, 0x06, 0xC8, 0x00, 0x20,
0x10, 0x10, 0x06, 0x00, 0x0C, 0x07, 0xFF, 0xE0, 0x00, 0x00, 0x01, 0xF2, 0x01, 0x08, 0x1F, 0x20,
0x10, 0x10, 0x06, 0x00, 0x08, 0x1F, 0x00, 0x78, 0x00, 0x00, 0x00, 0x42, 0x01, 0x38, 0x01, 0x20,
0x18, 0x10, 0x04, 0x00, 0x09, 0xF8, 0x00, 0x1E, 0x00, 0x00, 0x00, 0x6E, 0x01, 0x88, 0x02, 0x20,
0x1C, 0x10, 0x06, 0x00, 0x19, 0x41, 0x80, 0x07, 0xF0, 0x00, 0x01, 0x9A, 0x06, 0x68, 0x02, 0x20,
0x0C, 0x10, 0x07, 0x00, 0x18, 0x1F, 0x01, 0x81, 0xF0, 0x00, 0x02, 0x02, 0x00, 0x08, 0x04, 0x20,
0x07, 0x10, 0x03, 0x80, 0x30, 0x00, 0x01, 0x80, 0x00, 0x00, 0x00, 0x7C, 0x01, 0xF0, 0x08, 0x20,
0x03, 0x10, 0x01, 0xE0, 0xE0, 0x00, 0x01, 0x80, 0x00, 0x00, 0x00, 0x82, 0x02, 0x08, 0x10, 0x20,
0x01, 0x90, 0x00, 0xFF, 0xC0, 0x00, 0x01, 0x80, 0x00, 0x00, 0x00, 0x82, 0x02, 0x08, 0x00, 0x20,
0x00, 0xF0, 0x00, 0x1F, 0x00, 0x00, 0x01, 0x80, 0x00, 0x00, 0x00, 0x7C, 0x01, 0xF0, 0x00, 0x20,
0x00, 0x70, 0x00, 0x00, 0x00, 0x00, 0x01, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x30, 0x00, 0x00, 0x00, 0x00, 0x01, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x18, 0x00, 0x00, 0x00, 0x00, 0x03, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x1C, 0x00, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x07, 0xFF, 0xFF, 0xFF, 0xFF, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x03, 0xFF, 0xFF, 0xFF, 0xFF, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};
const unsigned char PROGMEM asset06[] = {
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x01, 0xFF, 0xFF, 0xFF, 0xFF, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x07, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x0E, 0x00, 0x00, 0x00, 0x00, 0x03, 0x80, 0x00, 0x00, 0x00, 0x00, 0x20, 0x28, 0x42, 0x00, 0x80,
0x1C, 0x00, 0x00, 0x00, 0x00, 0x01, 0xC0, 0x00, 0x00, 0x00, 0x1F, 0x27, 0xA8, 0xA2, 0x3C, 0x80,
0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE0, 0x00, 0x00, 0x00, 0x11, 0x24, 0xA9, 0x12, 0x04, 0x80,
0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x70, 0x00, 0x00, 0x00, 0x11, 0x24, 0xE9, 0x12, 0x78, 0x80,
0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x00, 0x11, 0x24, 0xA9, 0x12, 0x0B, 0x80,
0x10, 0x00, 0x00, 0x00, 0x00, 0x03, 0xBC, 0x00, 0x00, 0x00, 0x11, 0x24, 0xA9, 0x12, 0x10, 0x80,
0x10, 0x07, 0xFF, 0xFF, 0xFF, 0xFF, 0xFE, 0x00, 0x00, 0x00, 0x11, 0x24, 0xA9, 0x22, 0x20, 0x80,
0x10, 0x0E, 0x00, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x0E, 0x23, 0x28, 0xC2, 0x40, 0x80,
0x10, 0x18, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x20, 0x28, 0x02, 0x00, 0x80,
0x10, 0x18, 0x00, 0x00, 0x00, 0x00, 0x01, 0x80, 0xF0, 0x00, 0x00, 0x20, 0x08, 0x02, 0x00, 0x80,
0x10, 0x10, 0x00, 0x00, 0x3C, 0x00, 0x01, 0x87, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x10, 0x10, 0x00, 0x00, 0xF9, 0xF0, 0x01, 0x1E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x10, 0x10, 0x00, 0x01, 0xC0, 0xFE, 0x00, 0x78, 0x00, 0x00, 0x00, 0x20, 0x28, 0xE2, 0x00, 0x80,
0x10, 0x10, 0x00, 0x03, 0x80, 0x07, 0xC1, 0xE0, 0x00, 0x00, 0x1F, 0x21, 0x29, 0x12, 0x7E, 0x80,
0x10, 0x10, 0x00, 0x03, 0x00, 0x01, 0xFF, 0x80, 0x00, 0x00, 0x11, 0x21, 0x29, 0x1E, 0x10, 0x80,
0x10, 0x10, 0x00, 0x06, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x11, 0x21, 0x69, 0x12, 0x10, 0x80,
0x10, 0x10, 0x00, 0x06, 0x00, 0x0C, 0x00, 0x00, 0x00, 0x00, 0x11, 0x23, 0x29, 0xF2, 0x10, 0x80,
0x10, 0x10, 0x00, 0x06, 0x00, 0x18, 0x00, 0x00, 0x00, 0x00, 0x11, 0x23, 0x28, 0x02, 0x28, 0x80,
0x10, 0x10, 0x1F, 0x86, 0x00, 0x18, 0x01, 0x80, 0x00, 0x00, 0x11, 0x24, 0xA8, 0x82, 0x24, 0x80,
0x10, 0x10, 0x39, 0xC6, 0x00, 0x70, 0x01, 0x80, 0x00, 0x00, 0x0E, 0x28, 0x68, 0x80, 0x42, 0x80,
0x10, 0x10, 0x70, 0x67, 0x01, 0xC0, 0x01, 0x80, 0x18, 0x00, 0x00, 0x20, 0x28, 0xFE, 0x00, 0x80,
0x10, 0x10, 0x60, 0x23, 0x03, 0x80, 0x01, 0x80, 0xFC, 0x00, 0x00, 0x20, 0x08, 0x00, 0x00, 0x80,
0x10, 0x10, 0x40, 0x33, 0x06, 0x3E, 0x00, 0x03, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x10, 0x10, 0xC0, 0x39, 0x86, 0x3F, 0xC0, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x10, 0x10, 0xC0, 0x1D, 0xCC, 0x01, 0xF0, 0x7C, 0x00, 0x00, 0x00, 0x01, 0xFE, 0x00, 0x80, 0x00,
0x10, 0x10, 0xC0, 0x0F, 0xFF, 0x80, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x02, 0x7C, 0x80, 0x00,
0x10, 0x10, 0xC0, 0x03, 0xFF, 0x00, 0x07, 0x80, 0x00, 0x00, 0x00, 0x00, 0x22, 0x04, 0x80, 0x00,
0x10, 0x10, 0xC0, 0x01, 0x8C, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x24, 0x08, 0x80, 0x00,
0x10, 0x10, 0x60, 0x01, 0x8C, 0x00, 0x18, 0x00, 0x00, 0x00, 0x00, 0x03, 0xFF, 0x08, 0x80, 0x00,
0x10, 0x10, 0x60, 0x01, 0xCE, 0x00, 0x19, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x80, 0x00,
0x10, 0x10, 0x70, 0x07, 0xFF, 0x00, 0x19, 0x80, 0x00, 0x00, 0x00, 0x00, 0xFC, 0x20, 0x80, 0x00,
0x10, 0x10, 0x38, 0x1F, 0xFD, 0x80, 0x09, 0x80, 0x00, 0x00, 0x00, 0x01, 0x02, 0x40, 0x80, 0x00,
0x10, 0x10, 0x1F, 0xF9, 0x8C, 0xE0, 0x09, 0x80, 0x00, 0x00, 0x00, 0x01, 0x02, 0x00, 0x80, 0x00,
0x10, 0x10, 0x07, 0xE1, 0x84, 0x00, 0x19, 0x87, 0xE0, 0x00, 0x00, 0x00, 0xFC, 0x00, 0x80, 0x00,
0x10, 0x10, 0x00, 0x03, 0x03, 0xC0, 0x18, 0x1F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x10, 0x10, 0x00, 0x0E, 0x03, 0xF8, 0x10, 0x78, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x10, 0x10, 0x00, 0x3C, 0x00, 0x3E, 0x01, 0xE0, 0x00, 0x00, 0x00, 0xE2, 0x06, 0xC8, 0x00, 0x20,
0x10, 0x10, 0x00, 0x70, 0x03, 0x07, 0xFF, 0x80, 0x00, 0x00, 0x01, 0xF2, 0x01, 0x08, 0x1F, 0x20,
0x10, 0x10, 0x00, 0xC0, 0x01, 0x80, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x42, 0x01, 0x38, 0x01, 0x20,
0x18, 0x10, 0x00, 0xC0, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x6E, 0x01, 0x88, 0x02, 0x20,
0x1C, 0x10, 0x00, 0xC0, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x9A, 0x06, 0x68, 0x02, 0x20,
0x0C, 0x10, 0x00, 0xC0, 0x03, 0x00, 0x01, 0x80, 0x00, 0x00, 0x02, 0x02, 0x00, 0x08, 0x04, 0x20,
0x07, 0x10, 0x00, 0xC0, 0x07, 0x00, 0x01, 0x80, 0x00, 0x00, 0x00, 0x7C, 0x01, 0xF0, 0x08, 0x20,
0x03, 0x10, 0x00, 0x60, 0x0E, 0x00, 0x01, 0x80, 0x00, 0x00, 0x00, 0x82, 0x02, 0x08, 0x10, 0x20,
0x01, 0x90, 0x00, 0x70, 0x1C, 0x00, 0x01, 0x80, 0x00, 0x00, 0x00, 0x82, 0x02, 0x08, 0x00, 0x20,
0x00, 0xF0, 0x00, 0x1F, 0xF8, 0x00, 0x01, 0x80, 0x00, 0x00, 0x00, 0x7C, 0x01, 0xF0, 0x00, 0x20,
0x00, 0x70, 0x00, 0x07, 0xE0, 0x00, 0x01, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x30, 0x00, 0x00, 0x00, 0x00, 0x01, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x18, 0x00, 0x00, 0x00, 0x00, 0x03, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x1C, 0x00, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x07, 0xFF, 0xFF, 0xFF, 0xFF, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x03, 0xFF, 0xFF, 0xFF, 0xFF, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};

////////////////////////////OLED variables finish////////////////////////////////////////////


//아두이노 슬레이브 주소설정//
#define SLAVE_ADDRESS 0x04  
///////////////////////////

////미세먼지 센서 define/////////////////////////////////////
unsigned char pms[32]={0,};
int PM03_10=0;
int PM10_25=0;
int PM25_=0;
///////////////////////////////////////////////////////////

//VARIABLES

///////////////////////////////////variables for Arduino I2C /////////////////////////////
int number = 0;  
int send_number = 0;  
int send_number2=100;
//byte send_number[]={};
int state = 0;  

//////////////////////////////////PWM Pin test////////////////////////////////////////////
int isAuto = 1;

int fanDirection=4;
int fanPWM = 6;
int fanSpeed=0;
int preFanSpeed = 0;
int checkPrev=0;
//////////////////////////////////Tact(ile) Switch Variable////////////////////////////////
const int chB = 3;
const int inputB = 5;

//3개의 버튼 중에 선택된 버튼을 고르는 변수
int selectedB=0;
bool flag = false;

boolean buttonState;           //현재 스위치의 상태를 정합니다.(기본 low값)
boolean lastButtonState = LOW;

unsigned long lastDebounceTime = 0;
unsigned long debounceDelay = 25;
bool commandFlag = true;
unsigned long lastCheckTime= 0;
unsigned long commandDelay = 3000;
///////////////////////////////////////////variable end////////////////////////////////////
void initDraw(void) {
  
}

void draw(void) {
  if(initialCount< 7){
     //총 8X8을 이용해서 64의 값이 나오고 이 값을 >>3(=> draw_state/2^3)으로 나눠서
    //0~8사이에 메치되는 switch 문을 실행함.
    //u8g_triangle(draw_state&7);
    //u8g_disc_circle(draw_state&7);
    if (initialCount == 1)
      u8g.drawBitmapP( 0, 0, 16, 64, asset01);
    else if(initialCount == 2)
      u8g.drawBitmapP( 0, 0, 16, 64, asset02);
    else if(initialCount == 3)
      u8g.drawBitmapP( 0, 0, 16, 64, asset03);
    else if(initialCount == 4)
      u8g.drawBitmapP( 0, 0, 16, 64, asset04);
    else if(initialCount == 5)
      u8g.drawBitmapP( 0, 0, 16, 64, asset05);
    else if(initialCount == 6)
      u8g.drawBitmapP( 0, 0, 16, 64, asset06);
    //initialCount +=10;
    
  }else{
    
    
      if(frameControl == 0){
        int textX=7;
        int textY=11;                       
        int lSpace=16;
        u8g.setFont(u8g_font_helvB10);
        u8g.drawFrame(0,textY+1,128,64-(textY+1));
        // graphic commands to redraw the complete screen should be placed here  
        
        u8g.drawStr( textX, textY, "AIR CONDITION");
        
        //  u8g.drawStr( -10, 10, "Hello World!");
        /////////////////////////////////////////
        textX = textX-5;
        textY = textY + lSpace;
        //u8g.setFont(u8g_font_helvB10);
        u8g.drawStr( textX, textY, "PM1.0 :");
        char abuf[9];
        sprintf (abuf, "%d", PM03_10);
        u8g.drawStr( textX+58, textY, abuf);
        u8g.drawStr( textX+82, textY, "ug/m3");
        //////////////////////////////////
        textY = textY + lSpace;
        u8g.drawStr( textX, textY, "PM2.5 :");
        char bbuf[9];
        sprintf (bbuf, "%d", PM10_25);
        u8g.drawStr( textX+58, textY, bbuf);
        u8g.drawStr( textX+82, textY, "ug/m3");
        //////////////////////////////////
        textY = textY + lSpace;
        u8g.drawStr( textX, textY, "PM2.5+:");
        char cbuf[9];
        sprintf (cbuf, "%d", PM25_);
        u8g.drawStr( textX+58, textY, cbuf);
        u8g.drawStr( textX+82, textY, "ug/m3");
     
     }else if(frameControl == 1){
        int textX=20;
        int textY=11;
        int lSpace=16;
        int xSpace=10;
        u8g.setFont(u8g_font_helvB10);
        u8g.drawFrame(0,textY+1,128,64-(textY+1)); 
        u8g.drawStr( textX, textY, "FAN SPEED");       
        textX = textX - 15;
        textY = textY + lSpace;
        u8g.drawStr( textX, textY, "SPEED : ");
        textX = textX + 60;
        textY = textY - 10;
        int empty, full;
        if(fanSpeed/50 == 0){
          empty=0;
          full=5-empty;
        }else if(fanSpeed/50 == 1){
          empty=1;
          full=5-empty;
        }else if(fanSpeed/50 == 2){
          empty=2;
          full=5-empty;
        }else if(fanSpeed/50 == 3){
          empty=3;
          full=5-empty;
        }else if(fanSpeed/50 == 4){
          empty=4;
          full=5-empty;
        }else if(fanSpeed/50 == 5){
          empty=5;
          full=5-empty;
        }
        for(int i=0;i<empty;i++){
          u8g.drawBox(textX+(xSpace*i),textY,7,11);
        }
        for(int j=empty;j<5;j++){
          u8g.drawFrame(textX+(xSpace*j),textY,7,11);
        }
     }else if(frameControl == 2){
        //자동화(isAuto) 설정을 위한 영역를
        int textX=20;
        int textY=11;
        int lSpace=16;
        int xSpace=10;
        u8g.setFont(u8g_font_helvB10);
        u8g.drawFrame(0,textY+1,128,64-(textY+1)); 
        u8g.drawStr( textX, textY, "AUTO MODE");       
        textX = textX+15;
        textY = textY + lSpace;
        u8g.drawStr( textX, textY, "STATUS");
        textX = textX;
        textY = textY+lSpace;
        if(isAuto==1){
          u8g.drawStr( textX+10, textY, "AUTO");
        }else if(isAuto==0){
          u8g.drawStr( textX, textY, "MANUAL");
        }
        
     }
  }
  
  
}



void setup() {  
  
  //테스트용 LED 13번 설정
  //pinMode(13, OUTPUT);  
   Serial.begin(19200);
   Serial.println("Serial monitor is ready.......");
  ///////////setup for micro dust sensor start/////////////
  // Use software serial
  mySerial.begin(9600);
  for(int i=0;i<32;i++){
    pms[i]=0;
  }
  
  
  //Serial.println("OF Fine-Dusttest");
  ///////////setup for micro dust sensor finish/////////////
  
  ///////////initialize i2c as slave////////////////////////  
  Wire.begin(SLAVE_ADDRESS);  
  // define callbacks for i2c communication  
  Wire.onReceive(receiveData);  
  Wire.onRequest(sendData);  
  //Serial.println("I2C Communication setup is Ready!");  
  //////////initializing communication finish//////////////

  //////////initializing PWM test start////////////////////
  isAuto=1; //start with auto mode
  pinMode(fanPWM, OUTPUT);
  pinMode(fanDirection, OUTPUT);
  delay(50);
  digitalWrite(fanDirection,LOW);

  //////////initializing PWM test finish///////////////////

  //////////initializing button setting start//////////////
  pinMode(chB, INPUT);
  pinMode(inputB, INPUT);
  flag = false;
  ///////////initializing button setting finish////////////

  initialCount=1;
}  
void loop() {  

////////////////////////////////////미세먼지 파트 시작///////////////////////////////////
  // PMS7003 센서로부터 데이터 수신하기 위한 변수 설정
  static int CheckFirst=0;
  static int pm_add[3][5]={0,};
  static int pm_old[3]={0,};
  int chksum=0,res=0;;

  // SoftwareSerial로 미세먼지 데이터 수신
  if(mySerial.available()>=32){
    for(int j=0; j<32 ; j++){
      pms[j]=mySerial.read();
      if(j<30)
        chksum+=pms[j];
    }
    if(pms[30] != (unsigned char)(chksum>>8) ||  pms[31]!= (unsigned char)(chksum) ){
      return res;
    }
    if(pms[0]!=0x42 || pms[1]!=0x4d )
      return res;

  //수신된 데이터 3가지 변수(추후 데이터 송수신에 활용)에 수정 및 저장
  PM03_10 = pms[10]<<8 | pms[11];
  PM10_25 = pms[12]<<8 | pms[13];
  PM25_ = pms[14]<<8 | pms[15]; 
  
  }

///////////////////////////////////미세먼지 파트 끝///////////////////////////////////
  
//////////////////////////////////택트 스위치 트리거 확인 및 처리 파트 ///////////////////  
  int reading; //digitalRead 값 확인용 변수
  int sel=0; //2개의 버튼 중 1개를 찾는 변수
  
  //택트 스위치 트리거 확인 코드
  if(digitalRead(chB)){
    reading = digitalRead(chB);
    sel=1;
  }else if(digitalRead(inputB)){
    reading = digitalRead(inputB);
    sel=2;
  }

  //Software적 chattering 해결 코드
  if (reading != lastButtonState){  //스위치의 이전과 지금 상태가 다르면
    lastDebounceTime = millis();   //초를 기록합니다.
    //택트 스위치 모드일 때 활용되는 PULL UP 변수
    flag = true;
  }

  //
  if ((millis() - lastDebounceTime) > debounceDelay){//초가 기록되는 차이가 25ms보다 크면
    //25ms이상일 때, 해당 코드로 진입
    //flag를 통해 첫 PULL UP 상태를 확인 
    if(flag){
      //누른 버튼에 따른 동작 코드
      if(sel == 1){
        Serial.println("Frame Control button was hit");
        frameControl++;
        Serial.print("frameControl:");
        Serial.println(frameControl);
        if(frameControl>2){
          frameControl=0;
        }
      }else if(sel == 2){
        Serial.println("Function Control button was hit");
        if(frameControl==1 && !isAuto){
          fanSpeed +=50;
          if(fanSpeed > 250)
            fanSpeed = 0;
          Serial.print("fanSpeed:");
          Serial.println(fanSpeed);
          
        }else if(frameControl==2){
          isAuto = !isAuto;
          Serial.print("isAuto:");
          Serial.println(isAuto);
        }
      }
      flag=false;
    }

    if (reading != buttonState){
      buttonState = reading;  //스위치를 누른 값과 다르면 대입합니다.
    }
  }
  /////////////////////////////
  lastButtonState = reading;
  
  
  if(commandFlag){
    lastCheckTime = millis();
    commandFlag=false;
  }
  if(!isAuto){
    //MANUAL MODE fan control
     checkFanSpeed(fanSpeed);
  }
  if((millis() - lastCheckTime) > commandDelay){
     
    Serial.println("PWM commanded"); 
    
    if(isAuto){
      //AUTO MODE fan control//
      Serial.println("AUTO is ON");
      //기준설정을 위한 3가지 미세먼지 입자영역 평균
      int avrAirCond = (int)((PM03_10+PM10_25+PM25_)/3);
      Serial.print("Air condition:");
      Serial.println(avrAirCond);
      if(avrAirCond<=25){
        fanSpeed=0;
      }else if(avrAirCond>25&&avrAirCond<40){
        fanSpeed=50;
      }else if(avrAirCond>=40&&avrAirCond<50){
        fanSpeed=100;
      }else if(avrAirCond>=50&&avrAirCond<60){
        fanSpeed=150;
      }else if(avrAirCond>=60&&avrAirCond<70){
        fanSpeed=200;
      }else if(avrAirCond>=70){
        fanSpeed=250;
      }
      
      checkFanSpeed(fanSpeed);
    }else{
      Serial.println("AUTO is OFF");
    }
    commandFlag =true;
   
  }
  

  // picture loop
  u8g.firstPage();  
  do {
      draw();
  } while(u8g.nextPage());
  
  // rebuild the picture after some delay
  if(initialCount<7){
    initialCount++;
    delay(500);
  }else{
    delay(50);
  }
  
}  




// callback for received data  
void receiveData(int byteCount) {  
  int value=0;
  while (Wire.available()) {
    //명령코드 수행  
    
    number = Wire.read();  
    value=Wire.read();
    Serial.print("data received: ");  
    Serial.println(number);  
    Serial.print("data received: ");  
    Serial.println(value);  
    if (number == 4) {  
      isAuto=value;
//      if (state == 0) {  
//        //digitalWrite(13, HIGH); // set the LED on  
//        state = 1;  
//      }  
//      else {  
//        //digitalWrite(13, LOW); // set the LED off  
//        state = 0;  
//      }
      
    }else if(number ==3){
      
      if(value == 0){
        fanSpeed = 0;
      }else if(value ==1){
        fanSpeed = 50;
      }else if(value ==2){
        fanSpeed = 100;
      }else if(value ==3){
        fanSpeed = 150;
      }else if(value ==4){
        fanSpeed = 200;
      }else if(value ==5){
        fanSpeed = 250;
      }
    }
////////명령 프로토콜 재설계//////////////////////////////////
//    else if(number == 2){
//      //Nubison이나 클라우드 프로그램에서 콘트롤할 경우에 해당
//      fanSpeed +=10;
//    }else if(number == 3){
//      //Nubison이나 클라우드 프로그램에서 콘트롤할 경우에 해당
//      fanSpeed -=10;
//    }
//////////////////////////////////////////////////////////  
  }  
}  
//callback for sending data  
void sendData() {
  //줄바꿈이 시간 딜레이를 만드는 듯
  Wire.write(lowByte(PM03_10)); // data 전송
  Wire.write(highByte(PM03_10)); // data 전송
  Wire.write(lowByte(PM10_25)); // data 전송
  Wire.write(highByte(PM10_25)); // data 전송
  Wire.write(lowByte(PM25_)); // data 전송
  Wire.write(highByte(PM25_)); // data 전송
  Wire.write(lowByte(fanSpeed)); // data 전송
  Wire.write(highByte(fanSpeed)); // data 전송
  Wire.write(lowByte(isAuto)); // data 전송
  Wire.write(highByte(isAuto)); // data 전송
}  

//The function for motor speed contorl as Accel and Decel
void checkFanSpeed(int speed){
//  if(!isAuto){
//    
//    if(preFanSpeed != speed){
//      Serial.println("checkFanSpeed(MANUAL)");
//      Serial.println(speed);
//      if (speed == 0){
//        for(int fan=preFanSpeed;fan>0;fan--){
//              analogWrite(fanPWM,fan);
//              delay(2);
//        }
//      }else{
//        for(int fan=preFanSpeed;fan<speed;fan++){
//              analogWrite(fanPWM,fan);
//              delay(3);
//        }
//      }
//      preFanSpeed = speed;
//    }
//  }else{
//    Serial.println("checkFanSpeed(AUTO)");
//    Serial.println(speed);
//    analogWrite(fanPWM,speed);
//  }


  if(preFanSpeed != speed){
     Serial.println(preFanSpeed);
     Serial.println(speed);
    if(speed > preFanSpeed){
     
        for(int fan=preFanSpeed;fan<=speed;fan++){
              analogWrite(fanPWM,fan);
              delay(3);
        }
    }else{
        for(int fan=preFanSpeed;fan>=speed;fan--){
              analogWrite(fanPWM,fan);
              delay(3);
        }
    }
     preFanSpeed = speed;
  }
  
}
